// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;

namespace Microsoft.Azure.Management.DataLake.AnalyticsJob.Models
{
    /// <summary>
    /// The Data Lake Analytics U-SQL job statistics vertex stage information.
    /// </summary>
    public partial class JobStatisticsVertexStage
    {
        private long _dataRead;
        
        /// <summary>
        /// Optional. Gets or sets the amount of data read, in bytes.
        /// </summary>
        public long DataRead
        {
            get { return this._dataRead; }
            set { this._dataRead = value; }
        }
        
        private long _dataReadCrossPod;
        
        /// <summary>
        /// Optional. Gets or sets the amount of data read across multiple
        /// pods, in bytes.
        /// </summary>
        public long DataReadCrossPod
        {
            get { return this._dataReadCrossPod; }
            set { this._dataReadCrossPod = value; }
        }
        
        private long _dataReadIntraPod;
        
        /// <summary>
        /// Optional. Gets or sets the amount of data read in one pod, in bytes.
        /// </summary>
        public long DataReadIntraPod
        {
            get { return this._dataReadIntraPod; }
            set { this._dataReadIntraPod = value; }
        }
        
        private long _dataToRead;
        
        /// <summary>
        /// Optional. Gets or sets the amount of data remaining to be read, in
        /// bytes.
        /// </summary>
        public long DataToRead
        {
            get { return this._dataToRead; }
            set { this._dataToRead = value; }
        }
        
        private long _dataWritten;
        
        /// <summary>
        /// Optional. Gets or sets the amount of data written, in bytes.
        /// </summary>
        public long DataWritten
        {
            get { return this._dataWritten; }
            set { this._dataWritten = value; }
        }
        
        private int? _duplicateDiscardCount;
        
        /// <summary>
        /// Optional. Gets or sets the number of duplicates that were discarded.
        /// </summary>
        public int? DuplicateDiscardCount
        {
            get { return this._duplicateDiscardCount; }
            set { this._duplicateDiscardCount = value; }
        }
        
        private int? _failedCount;
        
        /// <summary>
        /// Optional. Gets or sets the number of failures that occured in this
        /// stage.
        /// </summary>
        public int? FailedCount
        {
            get { return this._failedCount; }
            set { this._failedCount = value; }
        }
        
        private long _maxVertexDataRead;
        
        /// <summary>
        /// Optional. Gets or sets the maximum amount of data read in a single
        /// vertex, in bytes.
        /// </summary>
        public long MaxVertexDataRead
        {
            get { return this._maxVertexDataRead; }
            set { this._maxVertexDataRead = value; }
        }
        
        private long _minVertexDataRead;
        
        /// <summary>
        /// Optional. Gets or sets the minimum amount of data read in a single
        /// vertex, in bytes.
        /// </summary>
        public long MinVertexDataRead
        {
            get { return this._minVertexDataRead; }
            set { this._minVertexDataRead = value; }
        }
        
        private int? _readFailureCount;
        
        /// <summary>
        /// Optional. Gets or sets the number of read failures in this stage.
        /// </summary>
        public int? ReadFailureCount
        {
            get { return this._readFailureCount; }
            set { this._readFailureCount = value; }
        }
        
        private int? _revocationCount;
        
        /// <summary>
        /// Optional. Gets or sets the number of vertices that were revoked
        /// during this stage.
        /// </summary>
        public int? RevocationCount
        {
            get { return this._revocationCount; }
            set { this._revocationCount = value; }
        }
        
        private int? _runningCount;
        
        /// <summary>
        /// Optional. Gets or sets the number of currently running vertices in
        /// this stage.
        /// </summary>
        public int? RunningCount
        {
            get { return this._runningCount; }
            set { this._runningCount = value; }
        }
        
        private int? _scheduledCount;
        
        /// <summary>
        /// Optional. Gets or sets the number of currently scheduled vertices
        /// in this stage
        /// </summary>
        public int? ScheduledCount
        {
            get { return this._scheduledCount; }
            set { this._scheduledCount = value; }
        }
        
        private string _stageName;
        
        /// <summary>
        /// Optional. Gets or sets the name of this stage in job execution.
        /// </summary>
        public string StageName
        {
            get { return this._stageName; }
            set { this._stageName = value; }
        }
        
        private int? _succeededCount;
        
        /// <summary>
        /// Optional. Gets or sets the number of vertices that succeeded in
        /// this stage.
        /// </summary>
        public int? SucceededCount
        {
            get { return this._succeededCount; }
            set { this._succeededCount = value; }
        }
        
        private long _tempDataWritten;
        
        /// <summary>
        /// Optional. Gets or sets the amount of temporary data written, in
        /// bytes.
        /// </summary>
        public long TempDataWritten
        {
            get { return this._tempDataWritten; }
            set { this._tempDataWritten = value; }
        }
        
        private int? _totalCount;
        
        /// <summary>
        /// Optional. Gets or sets the total vertex count for this stage.
        /// </summary>
        public int? TotalCount
        {
            get { return this._totalCount; }
            set { this._totalCount = value; }
        }
        
        private TimeSpan _totalFailedTime;
        
        /// <summary>
        /// Optional. Gets or sets the amount of time that failed vertices took
        /// up in this stage.
        /// </summary>
        public TimeSpan TotalFailedTime
        {
            get { return this._totalFailedTime; }
            set { this._totalFailedTime = value; }
        }
        
        private int? _totalProgress;
        
        /// <summary>
        /// Optional. Gets or sets the current progress of this stage, as a
        /// percentage.
        /// </summary>
        public int? TotalProgress
        {
            get { return this._totalProgress; }
            set { this._totalProgress = value; }
        }
        
        private TimeSpan _totalSucceededTime;
        
        /// <summary>
        /// Optional. Gets or sets the amount of time all successful vertices
        /// took in this stage.
        /// </summary>
        public TimeSpan TotalSucceededTime
        {
            get { return this._totalSucceededTime; }
            set { this._totalSucceededTime = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the JobStatisticsVertexStage class.
        /// </summary>
        public JobStatisticsVertexStage()
        {
        }
    }
}
