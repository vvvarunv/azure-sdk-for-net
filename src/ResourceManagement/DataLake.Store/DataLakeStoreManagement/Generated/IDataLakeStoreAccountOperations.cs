// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.Azure;
using Microsoft.Azure.Management.DataLake.Store.Models;

namespace Microsoft.Azure.Management.DataLake.Store
{
    /// <summary>
    /// Operations for managing Data Lake Store accounts
    /// </summary>
    public partial interface IDataLakeStoreAccountOperations
    {
        /// <summary>
        /// Creates the specified Data Lake Store account.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The name of the resource group the account will be associated with.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the create Data Lake Store account operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is inprogress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself. If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request. If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request and error information regarding
        /// the failure.
        /// </returns>
        Task<AzureAsyncOperationResponse> BeginCreateAsync(string resourceGroupName, DataLakeStoreAccountCreateOrUpdateParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// Deletes the Data Lake Store account object specified by the account
        /// name.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='accountName'>
        /// The name of the account to delete
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is inprogress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself. If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request. If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request and error information regarding
        /// the failure.
        /// </returns>
        Task<AzureAsyncOperationResponse> BeginDeleteAsync(string resourceGroupName, string accountName, CancellationToken cancellationToken);
        
        /// <summary>
        /// Updates the Data Lake Store account object specified by the account
        /// name with the contents of the account object.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the update Data Lake Store account operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is inprogress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself. If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request. If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request and error information regarding
        /// the failure.
        /// </returns>
        Task<AzureAsyncOperationResponse> BeginUpdateAsync(string resourceGroupName, DataLakeStoreAccountCreateOrUpdateParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// Creates the specified Data Lake Store account.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the create Data Lake Store account operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is inprogress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself. If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request. If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request and error information regarding
        /// the failure.
        /// </returns>
        Task<AzureAsyncOperationResponse> CreateAsync(string resourceGroupName, DataLakeStoreAccountCreateOrUpdateParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// Creates or updates the specified Data Lake Store account with the
        /// specified firewall rules.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The name of the resource group the account is in.
        /// </param>
        /// <param name='accountName'>
        /// The name of the account to add the firewall rule to
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the create firewall rule operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// Data Lake Store account Firewall rule information response.
        /// </returns>
        Task<DataLakeStoreFirewallRuleCreateUpdateOrGetResponse> CreateOrUpdateFirewallRuleAsync(string resourceGroupName, string accountName, DataLakeStoreFirewallRuleCreateOrUpdateParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// Deletes the Data Lake Store account object specified by the account
        /// name.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='accountName'>
        /// The name of the account to delete
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is inprogress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself. If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request. If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request and error information regarding
        /// the failure.
        /// </returns>
        Task<AzureAsyncOperationResponse> DeleteAsync(string resourceGroupName, string accountName, CancellationToken cancellationToken);
        
        /// <summary>
        /// Deletes the specified firewall rule from the specified Data Lake
        /// Store account
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='accountName'>
        /// The name of the account to delete the firewall rule from
        /// </param>
        /// <param name='firewallRuleName'>
        /// The name of the firewall rule to delete
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<AzureOperationResponse> DeleteFirewallRuleAsync(string resourceGroupName, string accountName, string firewallRuleName, CancellationToken cancellationToken);
        
        /// <summary>
        /// Gets the next page of the Data Lake firewall rule objects within
        /// the specified account, if any.
        /// </summary>
        /// <param name='nextLink'>
        /// The url to the next firewall rule page.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// Data Lake firewall rule list information.
        /// </returns>
        Task<DataLakeStoreFirewallRuleListResponse> FirewallRulesListNextAsync(string nextLink, CancellationToken cancellationToken);
        
        /// <summary>
        /// Gets the Data Lake Store account object specified by the account
        /// name.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='accountName'>
        /// The name of the account to retrieve
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// Data Lake Store account information response.
        /// </returns>
        Task<DataLakeStoreAccountGetResponse> GetAsync(string resourceGroupName, string accountName, CancellationToken cancellationToken);
        
        /// <summary>
        /// Gets the specified Data Lake firewall rules.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The name of the resource group the account is in.
        /// </param>
        /// <param name='accountName'>
        /// The name of the account to get the firewall rules from
        /// </param>
        /// <param name='firewallRuleName'>
        /// the name of the firewall rule to retrieve.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// Data Lake Store account Firewall rule information response.
        /// </returns>
        Task<DataLakeStoreFirewallRuleCreateUpdateOrGetResponse> GetFirewallRuleAsync(string resourceGroupName, string accountName, string firewallRuleName, CancellationToken cancellationToken);
        
        /// <summary>
        /// Lists the Data Lake Store account objects within the subscription
        /// or within a specific resource group.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='parameters'>
        /// Query parameters. If null is passed returns all Data Lake Store
        /// account items.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// Data Lake Store account list information response.
        /// </returns>
        Task<DataLakeStoreAccountListResponse> ListAsync(string resourceGroupName, DataLakeStoreAccountListParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// Lists the Data Lake firewall rules objects within the specified
        /// Data Lake Store account.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='accountName'>
        /// The name of the account to get the firewall rules from
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// Data Lake firewall rule list information.
        /// </returns>
        Task<DataLakeStoreFirewallRuleListResponse> ListFirewallRulesAsync(string resourceGroupName, string accountName, CancellationToken cancellationToken);
        
        /// <summary>
        /// Gets the next page of the Data Lake Store account objects within
        /// the subscription or within a specific resource group with the link
        /// to the next page, if any.
        /// </summary>
        /// <param name='nextLink'>
        /// The url to the next Data Lake Store account page.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// Data Lake Store account list information response.
        /// </returns>
        Task<DataLakeStoreAccountListResponse> ListNextAsync(string nextLink, CancellationToken cancellationToken);
        
        /// <summary>
        /// Updates the Data Lake Store account object specified by the account
        /// name with the contents of the account object.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the update Data Lake Store account operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is inprogress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself. If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request. If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request and error information regarding
        /// the failure.
        /// </returns>
        Task<AzureAsyncOperationResponse> UpdateAsync(string resourceGroupName, DataLakeStoreAccountCreateOrUpdateParameters parameters, CancellationToken cancellationToken);
    }
}
