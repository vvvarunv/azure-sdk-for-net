// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Collections.Generic;
using System.Linq;
using Hyak.Common;

namespace Microsoft.Azure.Insights.Models
{
    /// <summary>
    /// A log value set represents a set of log values in a time period.
    /// </summary>
    public partial class LogValue
    {
        private string _callerIpAddress;
        
        /// <summary>
        /// Optional. Gets or sets the caller IP address.
        /// </summary>
        public string CallerIpAddress
        {
            get { return this._callerIpAddress; }
            set { this._callerIpAddress = value; }
        }
        
        private string _category;
        
        /// <summary>
        /// Optional. Gets or sets the category of the log.
        /// </summary>
        public string Category
        {
            get { return this._category; }
            set { this._category = value; }
        }
        
        private string _correlationId;
        
        /// <summary>
        /// Optional. Gets or sets the correlation id of the log.  Used to
        /// group together a set of related log.
        /// </summary>
        public string CorrelationId
        {
            get { return this._correlationId; }
            set { this._correlationId = value; }
        }
        
        private int _durationMs;
        
        /// <summary>
        /// Optional. Gets or sets the duration of the operation in
        /// milliseconds.
        /// </summary>
        public int DurationMs
        {
            get { return this._durationMs; }
            set { this._durationMs = value; }
        }
        
        private string _identity;
        
        /// <summary>
        /// Optional. Gets or sets the identity that generated the event.
        /// </summary>
        public string Identity
        {
            get { return this._identity; }
            set { this._identity = value; }
        }
        
        private string _level;
        
        /// <summary>
        /// Optional. Gets or sets the level
        /// (Informational/Warning/Error/Critical) of the event.
        /// </summary>
        public string Level
        {
            get { return this._level; }
            set { this._level = value; }
        }
        
        private string _location;
        
        /// <summary>
        /// Optional. Gets or sets tThe location of the resource emitting the
        /// event.
        /// </summary>
        public string Location
        {
            get { return this._location; }
            set { this._location = value; }
        }
        
        private string _operationName;
        
        /// <summary>
        /// Optional. Gets or sets the name of the operation.
        /// </summary>
        public string OperationName
        {
            get { return this._operationName; }
            set { this._operationName = value; }
        }
        
        private string _operationVersion;
        
        /// <summary>
        /// Optional. Gets or sets the version of the operation.
        /// </summary>
        public string OperationVersion
        {
            get { return this._operationVersion; }
            set { this._operationVersion = value; }
        }
        
        private IDictionary<string, string> _properties;
        
        /// <summary>
        /// Optional. Gets or sets the collection of extended properties.
        /// </summary>
        public IDictionary<string, string> Properties
        {
            get { return this._properties; }
            set { this._properties = value; }
        }
        
        private string _resourceId;
        
        /// <summary>
        /// Optional. Gets or sets id of the reosurce related to the log.
        /// </summary>
        public string ResourceId
        {
            get { return this._resourceId; }
            set { this._resourceId = value; }
        }
        
        private string _resultDescription;
        
        /// <summary>
        /// Optional. Gets or sets the substatus of the operation.
        /// </summary>
        public string ResultDescription
        {
            get { return this._resultDescription; }
            set { this._resultDescription = value; }
        }
        
        private string _resultSignature;
        
        /// <summary>
        /// Optional. Gets or sets the substatus of the operation.
        /// </summary>
        public string ResultSignature
        {
            get { return this._resultSignature; }
            set { this._resultSignature = value; }
        }
        
        private string _resultType;
        
        /// <summary>
        /// Optional. Gets or sets the status of the operation.
        /// </summary>
        public string ResultType
        {
            get { return this._resultType; }
            set { this._resultType = value; }
        }
        
        private DateTime _time;
        
        /// <summary>
        /// Optional. Gets or sets the time when the log was generated
        /// </summary>
        public DateTime Time
        {
            get { return this._time; }
            set { this._time = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the LogValue class.
        /// </summary>
        public LogValue()
        {
            this.Properties = new LazyDictionary<string, string>();
        }
    }
}
