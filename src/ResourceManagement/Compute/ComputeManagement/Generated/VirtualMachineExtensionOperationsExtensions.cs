// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.Azure.Management.Compute;
using Microsoft.Azure.Management.Compute.Models;

namespace Microsoft.Azure.Management.Compute
{
    /// <summary>
    /// The Compute Management Client.
    /// </summary>
    public static partial class VirtualMachineExtensionOperationsExtensions
    {
        /// <summary>
        /// The operation to create or update the extension.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Compute.IVirtualMachineExtensionOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='vmName'>
        /// Required. The name of the virtual machine where the extension
        /// should be create or updated.
        /// </param>
        /// <param name='extensionParameters'>
        /// Required. Parameters supplied to the Create Virtual Machine
        /// Extension operation.
        /// </param>
        /// <returns>
        /// The compute long running operation response.
        /// </returns>
        public static VirtualMachineExtensionCreateOrUpdateResponse BeginCreatingOrUpdating(this IVirtualMachineExtensionOperations operations, string resourceGroupName, string vmName, VirtualMachineExtension extensionParameters)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IVirtualMachineExtensionOperations)s).BeginCreatingOrUpdatingAsync(resourceGroupName, vmName, extensionParameters);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// The operation to create or update the extension.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Compute.IVirtualMachineExtensionOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='vmName'>
        /// Required. The name of the virtual machine where the extension
        /// should be create or updated.
        /// </param>
        /// <param name='extensionParameters'>
        /// Required. Parameters supplied to the Create Virtual Machine
        /// Extension operation.
        /// </param>
        /// <returns>
        /// The compute long running operation response.
        /// </returns>
        public static Task<VirtualMachineExtensionCreateOrUpdateResponse> BeginCreatingOrUpdatingAsync(this IVirtualMachineExtensionOperations operations, string resourceGroupName, string vmName, VirtualMachineExtension extensionParameters)
        {
            return operations.BeginCreatingOrUpdatingAsync(resourceGroupName, vmName, extensionParameters, CancellationToken.None);
        }
        
        /// <summary>
        /// The operation to delete the extension.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Compute.IVirtualMachineExtensionOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='vmName'>
        /// Required. The name of the virtual machine where the extension
        /// should be deleted.
        /// </param>
        /// <param name='vmExtensionName'>
        /// Required. The name of the virtual machine extension.
        /// </param>
        /// <returns>
        /// The compute long running operation response.
        /// </returns>
        public static DeleteOperationResponse BeginDeleting(this IVirtualMachineExtensionOperations operations, string resourceGroupName, string vmName, string vmExtensionName)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IVirtualMachineExtensionOperations)s).BeginDeletingAsync(resourceGroupName, vmName, vmExtensionName);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// The operation to delete the extension.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Compute.IVirtualMachineExtensionOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='vmName'>
        /// Required. The name of the virtual machine where the extension
        /// should be deleted.
        /// </param>
        /// <param name='vmExtensionName'>
        /// Required. The name of the virtual machine extension.
        /// </param>
        /// <returns>
        /// The compute long running operation response.
        /// </returns>
        public static Task<DeleteOperationResponse> BeginDeletingAsync(this IVirtualMachineExtensionOperations operations, string resourceGroupName, string vmName, string vmExtensionName)
        {
            return operations.BeginDeletingAsync(resourceGroupName, vmName, vmExtensionName, CancellationToken.None);
        }
        
        /// <summary>
        /// The operation to create or update the extension.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Compute.IVirtualMachineExtensionOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='vmName'>
        /// Required. The name of the virtual machine where the extension
        /// should be create or updated.
        /// </param>
        /// <param name='extensionParameters'>
        /// Required. Parameters supplied to the Create Virtual Machine
        /// Extension operation.
        /// </param>
        /// <returns>
        /// The Compute service response for long-running operations.
        /// </returns>
        public static ComputeLongRunningOperationResponse CreateOrUpdate(this IVirtualMachineExtensionOperations operations, string resourceGroupName, string vmName, VirtualMachineExtension extensionParameters)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IVirtualMachineExtensionOperations)s).CreateOrUpdateAsync(resourceGroupName, vmName, extensionParameters);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// The operation to create or update the extension.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Compute.IVirtualMachineExtensionOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='vmName'>
        /// Required. The name of the virtual machine where the extension
        /// should be create or updated.
        /// </param>
        /// <param name='extensionParameters'>
        /// Required. Parameters supplied to the Create Virtual Machine
        /// Extension operation.
        /// </param>
        /// <returns>
        /// The Compute service response for long-running operations.
        /// </returns>
        public static Task<ComputeLongRunningOperationResponse> CreateOrUpdateAsync(this IVirtualMachineExtensionOperations operations, string resourceGroupName, string vmName, VirtualMachineExtension extensionParameters)
        {
            return operations.CreateOrUpdateAsync(resourceGroupName, vmName, extensionParameters, CancellationToken.None);
        }
        
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Compute.IVirtualMachineExtensionOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='vmName'>
        /// Required. The name of the virtual machine where the extension
        /// should be deleted.
        /// </param>
        /// <param name='vmExtensionName'>
        /// Required. The name of the virtual machine extension.
        /// </param>
        /// <returns>
        /// The compute long running operation response.
        /// </returns>
        public static DeleteOperationResponse Delete(this IVirtualMachineExtensionOperations operations, string resourceGroupName, string vmName, string vmExtensionName)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IVirtualMachineExtensionOperations)s).DeleteAsync(resourceGroupName, vmName, vmExtensionName);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Compute.IVirtualMachineExtensionOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='vmName'>
        /// Required. The name of the virtual machine where the extension
        /// should be deleted.
        /// </param>
        /// <param name='vmExtensionName'>
        /// Required. The name of the virtual machine extension.
        /// </param>
        /// <returns>
        /// The compute long running operation response.
        /// </returns>
        public static Task<DeleteOperationResponse> DeleteAsync(this IVirtualMachineExtensionOperations operations, string resourceGroupName, string vmName, string vmExtensionName)
        {
            return operations.DeleteAsync(resourceGroupName, vmName, vmExtensionName, CancellationToken.None);
        }
        
        /// <summary>
        /// The operation to get the extension.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Compute.IVirtualMachineExtensionOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='vmName'>
        /// Required. The name of the virtual machine containing the extension.
        /// </param>
        /// <param name='vmExtensionName'>
        /// Required. The name of the virtual machine extension.
        /// </param>
        /// <returns>
        /// The Get VM-Extension operation response.
        /// </returns>
        public static VirtualMachineExtensionGetResponse Get(this IVirtualMachineExtensionOperations operations, string resourceGroupName, string vmName, string vmExtensionName)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IVirtualMachineExtensionOperations)s).GetAsync(resourceGroupName, vmName, vmExtensionName);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// The operation to get the extension.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Compute.IVirtualMachineExtensionOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='vmName'>
        /// Required. The name of the virtual machine containing the extension.
        /// </param>
        /// <param name='vmExtensionName'>
        /// Required. The name of the virtual machine extension.
        /// </param>
        /// <returns>
        /// The Get VM-Extension operation response.
        /// </returns>
        public static Task<VirtualMachineExtensionGetResponse> GetAsync(this IVirtualMachineExtensionOperations operations, string resourceGroupName, string vmName, string vmExtensionName)
        {
            return operations.GetAsync(resourceGroupName, vmName, vmExtensionName, CancellationToken.None);
        }
        
        /// <summary>
        /// The operation to get an extension along with its instance view.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Compute.IVirtualMachineExtensionOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='vmName'>
        /// Required. The name of the virtual machine containing the extension.
        /// </param>
        /// <param name='vmExtensionName'>
        /// Required. The name of the virtual machine extension.
        /// </param>
        /// <returns>
        /// The Get VM-Extension operation response.
        /// </returns>
        public static VirtualMachineExtensionGetResponse GetWithInstanceView(this IVirtualMachineExtensionOperations operations, string resourceGroupName, string vmName, string vmExtensionName)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IVirtualMachineExtensionOperations)s).GetWithInstanceViewAsync(resourceGroupName, vmName, vmExtensionName);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// The operation to get an extension along with its instance view.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Compute.IVirtualMachineExtensionOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='vmName'>
        /// Required. The name of the virtual machine containing the extension.
        /// </param>
        /// <param name='vmExtensionName'>
        /// Required. The name of the virtual machine extension.
        /// </param>
        /// <returns>
        /// The Get VM-Extension operation response.
        /// </returns>
        public static Task<VirtualMachineExtensionGetResponse> GetWithInstanceViewAsync(this IVirtualMachineExtensionOperations operations, string resourceGroupName, string vmName, string vmExtensionName)
        {
            return operations.GetWithInstanceViewAsync(resourceGroupName, vmName, vmExtensionName, CancellationToken.None);
        }
    }
}
