// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;
using Microsoft.Azure;
using Microsoft.Azure.Management.Compute.Models;

namespace Microsoft.Azure.Management.Compute.Models
{
    /// <summary>
    /// Describes a Virtual Machine Extension.
    /// </summary>
    public partial class VirtualMachineExtension : ResourceBaseExtended
    {
        private bool _autoUpgradeMinorVersion;
        
        /// <summary>
        /// Optional. Gets or sets whether the extension handler should be
        /// automatically upgraded across minor versions.
        /// </summary>
        public bool AutoUpgradeMinorVersion
        {
            get { return this._autoUpgradeMinorVersion; }
            set { this._autoUpgradeMinorVersion = value; }
        }
        
        private string _extensionType;
        
        /// <summary>
        /// Optional. Gets or sets the type of the extension handler.
        /// </summary>
        public string ExtensionType
        {
            get { return this._extensionType; }
            set { this._extensionType = value; }
        }
        
        private VirtualMachineExtensionInstanceView _instanceView;
        
        /// <summary>
        /// Optional. Gets or sets the virtual machine extension instance view.
        /// </summary>
        public VirtualMachineExtensionInstanceView InstanceView
        {
            get { return this._instanceView; }
            set { this._instanceView = value; }
        }
        
        private string _protectedSettings;
        
        /// <summary>
        /// Optional. Gets or sets Json formatted protected settings for the
        /// extension.
        /// </summary>
        public string ProtectedSettings
        {
            get { return this._protectedSettings; }
            set { this._protectedSettings = value; }
        }
        
        private string _provisioningState;
        
        /// <summary>
        /// Optional. Gets or sets the provisioning state, which only appears
        /// in the response.
        /// </summary>
        public string ProvisioningState
        {
            get { return this._provisioningState; }
            set { this._provisioningState = value; }
        }
        
        private string _publisher;
        
        /// <summary>
        /// Optional. Gets or sets the name of the extension handler publisher.
        /// </summary>
        public string Publisher
        {
            get { return this._publisher; }
            set { this._publisher = value; }
        }
        
        private string _settings;
        
        /// <summary>
        /// Optional. Gets or sets Json formatted public settings for the
        /// extension.
        /// </summary>
        public string Settings
        {
            get { return this._settings; }
            set { this._settings = value; }
        }
        
        private string _typeHandlerVersion;
        
        /// <summary>
        /// Optional. Gets or sets the type version of the extension handler.
        /// </summary>
        public string TypeHandlerVersion
        {
            get { return this._typeHandlerVersion; }
            set { this._typeHandlerVersion = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the VirtualMachineExtension class.
        /// </summary>
        public VirtualMachineExtension()
        {
        }
        
        /// <summary>
        /// Initializes a new instance of the VirtualMachineExtension class
        /// with required arguments.
        /// </summary>
        public VirtualMachineExtension(string location)
            : this()
        {
            if (location == null)
            {
                throw new ArgumentNullException("location");
            }
            this.Location = location;
        }
    }
}
