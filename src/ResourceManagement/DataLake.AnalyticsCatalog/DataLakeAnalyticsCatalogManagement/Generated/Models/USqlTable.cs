// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Collections.Generic;
using System.Linq;
using Hyak.Common;
using Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models;

namespace Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models
{
    /// <summary>
    /// A Data Lake Analytics catalog U-SQL table item.
    /// </summary>
    public partial class USqlTable : CatalogItem
    {
        private IList<USqlTableColumn> _columnList;
        
        /// <summary>
        /// Optional. Gets or sets the list of columns in this table
        /// </summary>
        public IList<USqlTableColumn> ColumnList
        {
            get { return this._columnList; }
            set { this._columnList = value; }
        }
        
        private string _databaseName;
        
        /// <summary>
        /// Optional. Gets or sets the name of the database.
        /// </summary>
        public string DatabaseName
        {
            get { return this._databaseName; }
            set { this._databaseName = value; }
        }
        
        private ExternalTable _externalTable;
        
        /// <summary>
        /// Optional. Gets or sets the external table associated with the table.
        /// </summary>
        public ExternalTable ExternalTable
        {
            get { return this._externalTable; }
            set { this._externalTable = value; }
        }
        
        private IList<USqlIndex> _indexList;
        
        /// <summary>
        /// Optional. Gets or sets the list of indices in this table
        /// </summary>
        public IList<USqlIndex> IndexList
        {
            get { return this._indexList; }
            set { this._indexList = value; }
        }
        
        private string _name;
        
        /// <summary>
        /// Optional. Gets or sets the name of the table.
        /// </summary>
        public string Name
        {
            get { return this._name; }
            set { this._name = value; }
        }
        
        private IList<string> _partitionKeyList;
        
        /// <summary>
        /// Optional. Gets or sets the list of partition keys in the table
        /// </summary>
        public IList<string> PartitionKeyList
        {
            get { return this._partitionKeyList; }
            set { this._partitionKeyList = value; }
        }
        
        private string _schemaName;
        
        /// <summary>
        /// Optional. Gets or sets the name of the schema associated with this
        /// table and database.
        /// </summary>
        public string SchemaName
        {
            get { return this._schemaName; }
            set { this._schemaName = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the USqlTable class.
        /// </summary>
        public USqlTable()
        {
            this.ColumnList = new LazyList<USqlTableColumn>();
            this.IndexList = new LazyList<USqlIndex>();
            this.PartitionKeyList = new LazyList<string>();
        }
    }
}
