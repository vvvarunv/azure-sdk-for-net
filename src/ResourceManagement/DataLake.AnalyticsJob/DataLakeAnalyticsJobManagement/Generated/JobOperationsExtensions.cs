// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.Azure;
using Microsoft.Azure.Management.DataLake.AnalyticsJob;
using Microsoft.Azure.Management.DataLake.AnalyticsJob.Models;

namespace Microsoft.Azure.Management.DataLake.AnalyticsJob
{
    /// <summary>
    /// Creates an Azure Data Lake Analytics job management client.
    /// </summary>
    public static partial class JobOperationsExtensions
    {
        /// <summary>
        /// Builds (compiles) the specified job in the specified Data Lake
        /// Analytics account for job correctness and validation.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.DataLake.AnalyticsJob.IJobOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='accountName'>
        /// Required. The name of the Data Lake Analytics account to build the
        /// job for
        /// </param>
        /// <param name='parameters'>
        /// Required. The parameters to build a job, which simulates submission.
        /// </param>
        /// <returns>
        /// Data Lake Analytics job information response from a build or create
        /// request.
        /// </returns>
        public static JobInfoBuildOrCreateResponse Build(this IJobOperations operations, string resourceGroupName, string accountName, JobInfoBuildOrCreateParameters parameters)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IJobOperations)s).BuildAsync(resourceGroupName, accountName, parameters);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Builds (compiles) the specified job in the specified Data Lake
        /// Analytics account for job correctness and validation.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.DataLake.AnalyticsJob.IJobOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='accountName'>
        /// Required. The name of the Data Lake Analytics account to build the
        /// job for
        /// </param>
        /// <param name='parameters'>
        /// Required. The parameters to build a job, which simulates submission.
        /// </param>
        /// <returns>
        /// Data Lake Analytics job information response from a build or create
        /// request.
        /// </returns>
        public static Task<JobInfoBuildOrCreateResponse> BuildAsync(this IJobOperations operations, string resourceGroupName, string accountName, JobInfoBuildOrCreateParameters parameters)
        {
            return operations.BuildAsync(resourceGroupName, accountName, parameters, CancellationToken.None);
        }
        
        /// <summary>
        /// Cancels the running job specified by the job ID.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.DataLake.AnalyticsJob.IJobOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='accountName'>
        /// Required. The name of the Data Lake Analytics account to cancel the
        /// job for
        /// </param>
        /// <param name='jobIdentity'>
        /// Required. JobInfo ID to cancel.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static AzureOperationResponse Cancel(this IJobOperations operations, string resourceGroupName, string accountName, Guid jobIdentity)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IJobOperations)s).CancelAsync(resourceGroupName, accountName, jobIdentity);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Cancels the running job specified by the job ID.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.DataLake.AnalyticsJob.IJobOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='accountName'>
        /// Required. The name of the Data Lake Analytics account to cancel the
        /// job for
        /// </param>
        /// <param name='jobIdentity'>
        /// Required. JobInfo ID to cancel.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static Task<AzureOperationResponse> CancelAsync(this IJobOperations operations, string resourceGroupName, string accountName, Guid jobIdentity)
        {
            return operations.CancelAsync(resourceGroupName, accountName, jobIdentity, CancellationToken.None);
        }
        
        /// <summary>
        /// Submits the specified job to the specified Data Lake Analytics
        /// account for computation.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.DataLake.AnalyticsJob.IJobOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='accountName'>
        /// Required. The name of the Data Lake Analytics account to create the
        /// job for
        /// </param>
        /// <param name='parameters'>
        /// Required. The parameters to submit a job.
        /// </param>
        /// <returns>
        /// Data Lake Analytics job information response from a build or create
        /// request.
        /// </returns>
        public static JobInfoBuildOrCreateResponse Create(this IJobOperations operations, string resourceGroupName, string accountName, JobInfoBuildOrCreateParameters parameters)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IJobOperations)s).CreateAsync(resourceGroupName, accountName, parameters);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Submits the specified job to the specified Data Lake Analytics
        /// account for computation.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.DataLake.AnalyticsJob.IJobOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='accountName'>
        /// Required. The name of the Data Lake Analytics account to create the
        /// job for
        /// </param>
        /// <param name='parameters'>
        /// Required. The parameters to submit a job.
        /// </param>
        /// <returns>
        /// Data Lake Analytics job information response from a build or create
        /// request.
        /// </returns>
        public static Task<JobInfoBuildOrCreateResponse> CreateAsync(this IJobOperations operations, string resourceGroupName, string accountName, JobInfoBuildOrCreateParameters parameters)
        {
            return operations.CreateAsync(resourceGroupName, accountName, parameters, CancellationToken.None);
        }
        
        /// <summary>
        /// Gets the JobInfo object specified by the job ID.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.DataLake.AnalyticsJob.IJobOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='accountName'>
        /// Required. The name of the Data Lake Analytics account to get the
        /// job from
        /// </param>
        /// <param name='jobIdentity'>
        /// Required. JobInfo ID.
        /// </param>
        /// <returns>
        /// Data Lake Analytics job information.
        /// </returns>
        public static JobInfoGetResponse Get(this IJobOperations operations, string resourceGroupName, string accountName, Guid jobIdentity)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IJobOperations)s).GetAsync(resourceGroupName, accountName, jobIdentity);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Gets the JobInfo object specified by the job ID.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.DataLake.AnalyticsJob.IJobOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='accountName'>
        /// Required. The name of the Data Lake Analytics account to get the
        /// job from
        /// </param>
        /// <param name='jobIdentity'>
        /// Required. JobInfo ID.
        /// </param>
        /// <returns>
        /// Data Lake Analytics job information.
        /// </returns>
        public static Task<JobInfoGetResponse> GetAsync(this IJobOperations operations, string resourceGroupName, string accountName, Guid jobIdentity)
        {
            return operations.GetAsync(resourceGroupName, accountName, jobIdentity, CancellationToken.None);
        }
        
        /// <summary>
        /// Gets the U-SQL job debug data information specified by the job ID.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.DataLake.AnalyticsJob.IJobOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='accountName'>
        /// Required. The name of the Data Lake Analytics account to get the
        /// job from
        /// </param>
        /// <param name='jobIdentity'>
        /// Required. JobInfo ID.
        /// </param>
        /// <returns>
        /// Data Lake Analytics job data path information.
        /// </returns>
        public static JobDataPathGetResponse GetDebugDataPath(this IJobOperations operations, string resourceGroupName, string accountName, Guid jobIdentity)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IJobOperations)s).GetDebugDataPathAsync(resourceGroupName, accountName, jobIdentity);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Gets the U-SQL job debug data information specified by the job ID.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.DataLake.AnalyticsJob.IJobOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='accountName'>
        /// Required. The name of the Data Lake Analytics account to get the
        /// job from
        /// </param>
        /// <param name='jobIdentity'>
        /// Required. JobInfo ID.
        /// </param>
        /// <returns>
        /// Data Lake Analytics job data path information.
        /// </returns>
        public static Task<JobDataPathGetResponse> GetDebugDataPathAsync(this IJobOperations operations, string resourceGroupName, string accountName, Guid jobIdentity)
        {
            return operations.GetDebugDataPathAsync(resourceGroupName, accountName, jobIdentity, CancellationToken.None);
        }
        
        /// <summary>
        /// Gets the job statistics object specified by the job ID.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.DataLake.AnalyticsJob.IJobOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='accountName'>
        /// Required. The name of the Data Lake Analytics account to get the
        /// job from
        /// </param>
        /// <param name='jobIdentity'>
        /// Required. JobInfo ID.
        /// </param>
        /// <returns>
        /// Data Lake Analytics Account information.
        /// </returns>
        public static JobStatisticsGetResponse GetStatistics(this IJobOperations operations, string resourceGroupName, string accountName, Guid jobIdentity)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IJobOperations)s).GetStatisticsAsync(resourceGroupName, accountName, jobIdentity);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Gets the job statistics object specified by the job ID.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.DataLake.AnalyticsJob.IJobOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='accountName'>
        /// Required. The name of the Data Lake Analytics account to get the
        /// job from
        /// </param>
        /// <param name='jobIdentity'>
        /// Required. JobInfo ID.
        /// </param>
        /// <returns>
        /// Data Lake Analytics Account information.
        /// </returns>
        public static Task<JobStatisticsGetResponse> GetStatisticsAsync(this IJobOperations operations, string resourceGroupName, string accountName, Guid jobIdentity)
        {
            return operations.GetStatisticsAsync(resourceGroupName, accountName, jobIdentity, CancellationToken.None);
        }
        
        /// <summary>
        /// Gets the first page of the Data Lake Analytics JobInformation
        /// objects within the specified resource group with a link to the
        /// next page, if any.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.DataLake.AnalyticsJob.IJobOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='accountName'>
        /// Required. The name of the Data Lake Analytics account to get the
        /// job from
        /// </param>
        /// <param name='parameters'>
        /// Optional. Query parameters. If null is passed returns all JobInfo
        /// items.
        /// </param>
        /// <returns>
        /// List of jobInfo items.
        /// </returns>
        public static JobInfoListResponse List(this IJobOperations operations, string resourceGroupName, string accountName, JobListParameters parameters)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IJobOperations)s).ListAsync(resourceGroupName, accountName, parameters);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Gets the first page of the Data Lake Analytics JobInformation
        /// objects within the specified resource group with a link to the
        /// next page, if any.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.DataLake.AnalyticsJob.IJobOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='accountName'>
        /// Required. The name of the Data Lake Analytics account to get the
        /// job from
        /// </param>
        /// <param name='parameters'>
        /// Optional. Query parameters. If null is passed returns all JobInfo
        /// items.
        /// </param>
        /// <returns>
        /// List of jobInfo items.
        /// </returns>
        public static Task<JobInfoListResponse> ListAsync(this IJobOperations operations, string resourceGroupName, string accountName, JobListParameters parameters)
        {
            return operations.ListAsync(resourceGroupName, accountName, parameters, CancellationToken.None);
        }
        
        /// <summary>
        /// Gets the next page of the Data Lake Analytics JobInformation
        /// objects within the specified resource group with a link to the
        /// next page, if any.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.DataLake.AnalyticsJob.IJobOperations.
        /// </param>
        /// <param name='nextLink'>
        /// Required. The url to the next job information page.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <returns>
        /// List of jobInfo items.
        /// </returns>
        public static JobInfoListResponse ListNext(this IJobOperations operations, string nextLink, string resourceGroupName)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IJobOperations)s).ListNextAsync(nextLink, resourceGroupName);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Gets the next page of the Data Lake Analytics JobInformation
        /// objects within the specified resource group with a link to the
        /// next page, if any.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.DataLake.AnalyticsJob.IJobOperations.
        /// </param>
        /// <param name='nextLink'>
        /// Required. The url to the next job information page.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <returns>
        /// List of jobInfo items.
        /// </returns>
        public static Task<JobInfoListResponse> ListNextAsync(this IJobOperations operations, string nextLink, string resourceGroupName)
        {
            return operations.ListNextAsync(nextLink, resourceGroupName, CancellationToken.None);
        }
        
        /// <summary>
        /// Gets the first page of the Data Lake Analytics JobInformation
        /// objects within the specified resource group with a link to the
        /// next page, if any.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.DataLake.AnalyticsJob.IJobOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='accountName'>
        /// Required. The name of the Data Lake Analytics account to get the
        /// job from
        /// </param>
        /// <param name='queryString'>
        /// Optional. OData Query parameter string (e.g.
        /// '$orderBy=SubmitTime,$filter=State eq Succeeded'). If null is
        /// passed returns all JobInfo items.
        /// </param>
        /// <returns>
        /// List of jobInfo items.
        /// </returns>
        public static JobInfoListResponse ListWithQueryString(this IJobOperations operations, string resourceGroupName, string accountName, string queryString)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IJobOperations)s).ListWithQueryStringAsync(resourceGroupName, accountName, queryString);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Gets the first page of the Data Lake Analytics JobInformation
        /// objects within the specified resource group with a link to the
        /// next page, if any.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.DataLake.AnalyticsJob.IJobOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='accountName'>
        /// Required. The name of the Data Lake Analytics account to get the
        /// job from
        /// </param>
        /// <param name='queryString'>
        /// Optional. OData Query parameter string (e.g.
        /// '$orderBy=SubmitTime,$filter=State eq Succeeded'). If null is
        /// passed returns all JobInfo items.
        /// </param>
        /// <returns>
        /// List of jobInfo items.
        /// </returns>
        public static Task<JobInfoListResponse> ListWithQueryStringAsync(this IJobOperations operations, string resourceGroupName, string accountName, string queryString)
        {
            return operations.ListWithQueryStringAsync(resourceGroupName, accountName, queryString, CancellationToken.None);
        }
    }
}
