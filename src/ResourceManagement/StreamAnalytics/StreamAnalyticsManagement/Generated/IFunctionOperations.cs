// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.Azure.Management.StreamAnalytics.Models;

namespace Microsoft.Azure.Management.StreamAnalytics
{
    /// <summary>
    /// Operations for managing the function(s) of the stream analytics job.
    /// </summary>
    public partial interface IFunctionOperations
    {
        /// <summary>
        /// Test the connectivity of a function for a stream analytics job.
        /// Asynchronous call.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The resource group name of the stream analytics job.
        /// </param>
        /// <param name='jobName'>
        /// The name of the stream analytics job.
        /// </param>
        /// <param name='functionName'>
        /// The name of the function for the stream analytics job.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The test result of the input or output data source.
        /// </returns>
        Task<ResourceTestConnectionResponse> BeginTestConnectionAsync(string resourceGroupName, string jobName, string functionName, CancellationToken cancellationToken);
        
        /// <summary>
        /// Create or update a function for a stream analytics job.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The resource group name of the stream analytics job.
        /// </param>
        /// <param name='jobName'>
        /// The name of the stream analytics job.
        /// </param>
        /// <param name='parameters'>
        /// The parameters required to create or update a function for a stream
        /// analytics job.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response of the function create or update operation.
        /// </returns>
        Task<FunctionCreateOrUpdateResponse> CreateOrUpdateAsync(string resourceGroupName, string jobName, FunctionCreateOrUpdateParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// Create or update a function for a stream analytics job. The raw
        /// json content will be used.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The resource group name of the stream analytics job.
        /// </param>
        /// <param name='jobName'>
        /// The name of the stream analytics job.
        /// </param>
        /// <param name='functionName'>
        /// The name of the function for the stream analytics job.
        /// </param>
        /// <param name='parameters'>
        /// The parameters required to create or update a function for a stream
        /// analytics job.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response of the function create or update operation.
        /// </returns>
        Task<FunctionCreateOrUpdateResponse> CreateOrUpdateWithRawJsonContentAsync(string resourceGroupName, string jobName, string functionName, FunctionCreateOrUpdateWithRawJsonContentParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// Delete a function for a stream analytics job.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The resource group name of the stream analytics job.
        /// </param>
        /// <param name='jobName'>
        /// The name of the stream analytics job.
        /// </param>
        /// <param name='functionName'>
        /// The name of the function for the stream analytics job.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The common operation response.
        /// </returns>
        Task<CommonOperationResponse> DeleteAsync(string resourceGroupName, string jobName, string functionName, CancellationToken cancellationToken);
        
        /// <summary>
        /// Get a function for a stream analytics job.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The resource group name of the stream analytics job.
        /// </param>
        /// <param name='jobName'>
        /// The name of the stream analytics job.
        /// </param>
        /// <param name='functionName'>
        /// The name of the function for the stream analytics job.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response of the get stream analytics function operation.
        /// </returns>
        Task<FunctionGetResponse> GetAsync(string resourceGroupName, string jobName, string functionName, CancellationToken cancellationToken);
        
        /// <summary>
        /// Get a list of the functions defined in a stream analytics job.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The resource group name of the stream analytics job.
        /// </param>
        /// <param name='jobName'>
        /// The name of the stream analytics job.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response of the function list operation.
        /// </returns>
        Task<FunctionListResponse> ListFunctionsInJobAsync(string resourceGroupName, string jobName, CancellationToken cancellationToken);
        
        /// <summary>
        /// Update a function for a stream analytics job.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The resource group name of the stream analytics job.
        /// </param>
        /// <param name='jobName'>
        /// The name of the stream analytics job.
        /// </param>
        /// <param name='functionName'>
        /// The name of the function for the stream analytics job.
        /// </param>
        /// <param name='parameters'>
        /// The parameters required to update a function for a stream analytics
        /// job.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response of the function patch operation.
        /// </returns>
        Task<FunctionPatchResponse> PatchAsync(string resourceGroupName, string jobName, string functionName, FunctionPatchParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// Retrieve the default definition of a function for a stream
        /// analytics job.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The resource group name of the stream analytics job.
        /// </param>
        /// <param name='jobName'>
        /// The name of the stream analytics job.
        /// </param>
        /// <param name='functionName'>
        /// The name of the function for the stream analytics job.
        /// </param>
        /// <param name='parameters'>
        /// The parameters required to retrieve the default definition of a
        /// function for a stream analytics job.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response of the retrieve default function definition operation.
        /// </returns>
        Task<FunctionRetrieveDefaultDefinitionResponse> RetrieveDefaultDefinitionAsync(string resourceGroupName, string jobName, string functionName, FunctionRetrieveDefaultDefinitionParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// Retrieve the default definition of a function for a stream
        /// analytics job. The raw json content will be used for the request
        /// body.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The resource group name of the stream analytics job.
        /// </param>
        /// <param name='jobName'>
        /// The name of the stream analytics job.
        /// </param>
        /// <param name='functionName'>
        /// The name of the function for the stream analytics job.
        /// </param>
        /// <param name='parameters'>
        /// The parameters required to retrieve the default definition of a
        /// function for a stream analytics job.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response of the retrieve default function definition operation.
        /// </returns>
        Task<FunctionRetrieveDefaultDefinitionResponse> RetrieveDefaultDefinitionWithRawJsonContentAsync(string resourceGroupName, string jobName, string functionName, FunctionRetrieveDefaultDefinitionWithRawJsonContentParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// Test the connectivity of a function for a stream analytics job.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The resource group name of the stream analytics job.
        /// </param>
        /// <param name='jobName'>
        /// The name of the stream analytics job.
        /// </param>
        /// <param name='functionName'>
        /// The name of the function for the stream analytics job.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The test result of the input or output data source.
        /// </returns>
        Task<ResourceTestConnectionResponse> TestConnectionAsync(string resourceGroupName, string jobName, string functionName, CancellationToken cancellationToken);
    }
}
